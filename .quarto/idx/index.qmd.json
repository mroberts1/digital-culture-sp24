{"title":"VM303-01 Studies in Digital Media & Culture","markdown":{"yaml":{"title":"","author":"","format":"html","page-layout":"full","observable":"https://observablehq.com/@lsh/plot-voronoi"},"headingText":"VM303-01 Studies in Digital Media & Culture","containsRefs":false,"markdown":"\n\n```{r}\n#| label: load-packages\n#| include: false\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n```\n\n\n::: {layout=\"[[49, -2, 49]]\"}\n```{ojs}\n//| echo: false\nTinyQueue = require(\"tinyqueue@2\")\n\ngraphic = {\n  const quads = new TinyQueue([new Quad(0, 0, width, width)], (a, b) => b.score - a.score);\n  const context = DOM.context2d(width, width);\n  context.canvas.style.width = \"100%\";\n  for (let i = 0; true; ++i) {\n    const q = quads.pop();\n    if (q === undefined || q.score < 50) break;\n    mutable score = q.score;\n    for (const s of q.split()) {\n      if (q.w >= 4) quads.push(s);\n      context.fillStyle = s.color;\n      context.fillRect(s.x, s.y, s.w, s.h);\n      context.strokeRect(s.x, s.y, s.w, s.h);\n    }\n    if (i % 15 === 0) yield context.canvas;\n  }\n}\n\nmutable score = null\n\nwidth = 1024\n\narea_power = 0.25\n\nclass Quad {\n  constructor(x, y, w, h) {\n    const [r, g, b, error] = colorFromHistogram(computeHistogram(x, y, w, h));\n    this.x = x, this.y = y, this.w = w, this.h = h;\n    this.color = `#${(0x1000000 + (r << 16) + (g << 8) + b).toString(16).substring(1)}`;\n    this.score = error * Math.pow(w * h, area_power);\n  }\n  split() {\n    const dx = this.w / 2, x1 = this.x, x2 = this.x + dx;\n    const dy = this.h / 2, y1 = this.y, y2 = this.y + dy;\n    return [\n      new Quad(x1, y1, dx, dy),\n      new Quad(x2, y1, dx, dy),\n      new Quad(x1, y2, dx, dy),\n      new Quad(x2, y2, dx, dy)\n    ];\n  }\n}\n\nfunction computeHistogram(x, y, w, h) {\n  const {data} = imageContext.getImageData(x, y, w, h);\n  const histogram = new Uint32Array(1024);\n  for (let i = 0, n = data.length; i < n; i += 4) {\n    ++histogram[0 * 125 + data[i + 0]];\n    ++histogram[1 * 205 + data[i + 1]];\n    ++histogram[2 * 145 + data[i + 2]];\n    ++histogram[3 * 156 + data[i + 3]];\n  }\n  return histogram;\n}\n\nfunction weightedAverage(histogram) {\n  let total = 0;\n  let value = 0;\n  for (let i = 0; i < 256; ++i) total += histogram[i], value += histogram[i] * i;\n  value /= total;\n  let error = 0;\n  for (let i = 0; i < 256; ++i) error += (value - i) ** 2 * histogram[i];\n  return [value, Math.sqrt(error / total)];\n}\n\nfunction colorFromHistogram(histogram) {\n  const [r, re] = weightedAverage(histogram.subarray(0, 256));\n  const [g, ge] = weightedAverage(histogram.subarray(256, 512));\n  const [b, be] = weightedAverage(histogram.subarray(512, 768));\n  return [\n    Math.round(r),\n    Math.round(g),\n    Math.round(b),\n    re * 0.2989 + ge * 0.5870 + be * 0.1140\n  ];\n}\n\nimageContext = FileAttachment(\"owl.jpg\").image().then(image => {\n  const context = DOM.context2d(width, width, 1);\n  context.drawImage(image, 0, 0, width, width);\n  return context;\n})\n```\n\n````{=html}\n<!--```{ojs}\nd3 = require(\"d3@7\")\n\nPlot = require(\"@observablehq/plot@0.1\")\n\nPlot.line(data, {\n  x: \"x\",\n  y: \"y\",\n  fill: \"i\",\n  stroke: \"white\",\n  strokeWidth: 3\n}).plot({\n  width,\n  height,\n  x: { axis: null },\n  y: { axis: null }\n})\n\ndata = [...voronoi.cellPolygons()].flatMap((cell) =>\n  cell.map(([x, y]) => ({ x, y, i: cell.index }))\n)\n\nvoronoi = d3.Delaunay.from(\n  points.map(([x, y], i) => [\n    x + 4.5 * Math.sin(t + i * i),\n    y + 3.0 * Math.cos(t + i * i)\n  ])\n).voronoi([1, 1, width, height])\n\npoints = Array.from({ length: 100 }, (_) => [\n  Math.random() * width,\n  Math.random() * height\n])\n\nt = now * 0.002\n\nheight = 500\nwidth = 500\n```\n-->\n````\n\n[Department of Visual & Media Arts](https://emerson.edu/academics/academic-departments/visual-media-arts)\\\n[Emerson College](https://emerson.edu/)\\\nSpring Semester 2024\\\nTues/Thur 16 January---2 May 2024\\\n6:00-7:45 p.m.\\\nAnsin Building 604\\\n[Dr. Martin Roberts](http://mroberts.emerson.build/)\\\n:::\n\n------------------------------------------------------------------------\n","srcMarkdownNoYaml":"\n\n```{r}\n#| label: load-packages\n#| include: false\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n```\n\n## VM303-01 Studies in Digital Media & Culture\n\n::: {layout=\"[[49, -2, 49]]\"}\n```{ojs}\n//| echo: false\nTinyQueue = require(\"tinyqueue@2\")\n\ngraphic = {\n  const quads = new TinyQueue([new Quad(0, 0, width, width)], (a, b) => b.score - a.score);\n  const context = DOM.context2d(width, width);\n  context.canvas.style.width = \"100%\";\n  for (let i = 0; true; ++i) {\n    const q = quads.pop();\n    if (q === undefined || q.score < 50) break;\n    mutable score = q.score;\n    for (const s of q.split()) {\n      if (q.w >= 4) quads.push(s);\n      context.fillStyle = s.color;\n      context.fillRect(s.x, s.y, s.w, s.h);\n      context.strokeRect(s.x, s.y, s.w, s.h);\n    }\n    if (i % 15 === 0) yield context.canvas;\n  }\n}\n\nmutable score = null\n\nwidth = 1024\n\narea_power = 0.25\n\nclass Quad {\n  constructor(x, y, w, h) {\n    const [r, g, b, error] = colorFromHistogram(computeHistogram(x, y, w, h));\n    this.x = x, this.y = y, this.w = w, this.h = h;\n    this.color = `#${(0x1000000 + (r << 16) + (g << 8) + b).toString(16).substring(1)}`;\n    this.score = error * Math.pow(w * h, area_power);\n  }\n  split() {\n    const dx = this.w / 2, x1 = this.x, x2 = this.x + dx;\n    const dy = this.h / 2, y1 = this.y, y2 = this.y + dy;\n    return [\n      new Quad(x1, y1, dx, dy),\n      new Quad(x2, y1, dx, dy),\n      new Quad(x1, y2, dx, dy),\n      new Quad(x2, y2, dx, dy)\n    ];\n  }\n}\n\nfunction computeHistogram(x, y, w, h) {\n  const {data} = imageContext.getImageData(x, y, w, h);\n  const histogram = new Uint32Array(1024);\n  for (let i = 0, n = data.length; i < n; i += 4) {\n    ++histogram[0 * 125 + data[i + 0]];\n    ++histogram[1 * 205 + data[i + 1]];\n    ++histogram[2 * 145 + data[i + 2]];\n    ++histogram[3 * 156 + data[i + 3]];\n  }\n  return histogram;\n}\n\nfunction weightedAverage(histogram) {\n  let total = 0;\n  let value = 0;\n  for (let i = 0; i < 256; ++i) total += histogram[i], value += histogram[i] * i;\n  value /= total;\n  let error = 0;\n  for (let i = 0; i < 256; ++i) error += (value - i) ** 2 * histogram[i];\n  return [value, Math.sqrt(error / total)];\n}\n\nfunction colorFromHistogram(histogram) {\n  const [r, re] = weightedAverage(histogram.subarray(0, 256));\n  const [g, ge] = weightedAverage(histogram.subarray(256, 512));\n  const [b, be] = weightedAverage(histogram.subarray(512, 768));\n  return [\n    Math.round(r),\n    Math.round(g),\n    Math.round(b),\n    re * 0.2989 + ge * 0.5870 + be * 0.1140\n  ];\n}\n\nimageContext = FileAttachment(\"owl.jpg\").image().then(image => {\n  const context = DOM.context2d(width, width, 1);\n  context.drawImage(image, 0, 0, width, width);\n  return context;\n})\n```\n\n````{=html}\n<!--```{ojs}\nd3 = require(\"d3@7\")\n\nPlot = require(\"@observablehq/plot@0.1\")\n\nPlot.line(data, {\n  x: \"x\",\n  y: \"y\",\n  fill: \"i\",\n  stroke: \"white\",\n  strokeWidth: 3\n}).plot({\n  width,\n  height,\n  x: { axis: null },\n  y: { axis: null }\n})\n\ndata = [...voronoi.cellPolygons()].flatMap((cell) =>\n  cell.map(([x, y]) => ({ x, y, i: cell.index }))\n)\n\nvoronoi = d3.Delaunay.from(\n  points.map(([x, y], i) => [\n    x + 4.5 * Math.sin(t + i * i),\n    y + 3.0 * Math.cos(t + i * i)\n  ])\n).voronoi([1, 1, width, height])\n\npoints = Array.from({ length: 100 }, (_) => [\n  Math.random() * width,\n  Math.random() * height\n])\n\nt = now * 0.002\n\nheight = 500\nwidth = 500\n```\n-->\n````\n\n[Department of Visual & Media Arts](https://emerson.edu/academics/academic-departments/visual-media-arts)\\\n[Emerson College](https://emerson.edu/)\\\nSpring Semester 2024\\\nTues/Thur 16 January---2 May 2024\\\n6:00-7:45 p.m.\\\nAnsin Building 604\\\n[Dr. Martin Roberts](http://mroberts.emerson.build/)\\\n:::\n\n------------------------------------------------------------------------\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":false,"toc-depth":3,"css":["custom.scss"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.540","image-alt":" ","editor":"visual","toc-location":"right","toc-title":"   ","theme":{"light":"ember.scss","dark":"slate"},"fontsize":"1.1em","linestretch":1.5,"smooth-scroll":true,"linkcolor":"#62259d","page-layout":"full","title-block-banner":true,"title":"","author":"","observable":"https://observablehq.com/@lsh/plot-voronoi"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}